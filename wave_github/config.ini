[Data]
Advection = 1 ;Factor in front of the advection term \beta * \grad u_t
  
[Space_Discretisation]
; determine parameters for the refinement levels that should be run through.
; starting_lvl determines the first refinement level, where the actual refinement level is
; starting_lvl*refinement_factor.
; The refinement_factor determines the factor between the refinement levels of two consecutive runs.
; The variable n_runs determines, how many runs should be processed.
;Starting_Lvl = 3
Starting_Lvl = 7
N_Runs= 1
Refinement_Factor = 1
Pol_Degree = 2


[Time_Integration]
;Time_Integrator= CrankNicolson
Time_Integrator= vIMEX
;Time_Integrator= ExpoEuler
;Time_Integrator= ExpoMidpoint
;Time_Integrator= Leapfrog
;Time_Integrator= Runge
;Time_Integrator= RungeKutta
End_Time= 0.8
;Number of timesteps, that will be used for the time integration. Seperate with ','.
;Timesteps= 10,20,40,80,100,200,400,800,1600,3200
Timesteps= 20

[Solver_Settings]
;solver settings for iterative linear solvers (e.g. GMRES or CG) and nonlinear Newton solvers
Max_itersteps = 1000
;Lin_Solver_Tolerance = 0.001
Lin_Solver_Tolerance = 0.01
;Sicherheitsfaktor, sollte <=1 gewählt werden (wird mit richtiger \tau-Potenz multipliziert)
Newton_Tolerance = 0.1
;Newton_Type = full
Newton_Type = simple 
; Aktuell funktioniert vermutlich nur das vereinfachte Newton Verfahren (checken)
Multigrid = false
; Multigrid preconditioner for system Matrix
; Achtung: Bei Mehrgittervorkonditionierung für CN wird immer das vereinfachte Newton Verfahren verwendet
Mass_Lumping = true 
; Mass Lumping for explicit methods (Runge, RungeKutta), only works for Pol_Degree = 1 and 2
; Norm in stopping criterion of GMRES
Stopping_Criterion = ScaledEuclideanNorm
;Stopping_Criterion = EnergyNorm

[Krylov_Settings]
;Sicherheitsfaktor, sollte <= 1 gewählt werden (wird mit richtiger \tau-Potenz multipliziert)
Tol = 1e-3
Max_Iterations = 100
;Theta = 0.001
;Krylov = Rational
Krylov = Polynomial

[Output]
Solution= false
Matrices= false
;Profiling= false
Output_timestep_skip = 10

[Error]
;Determines, if the error of the numerical solution to an exact (or a reference) 
;solution should be computed.
Error= true
;Determines if the error is computed against an exact or a reference solution
;Consider data/ExactSolution and data/RHS to see which specific functions are impelemented there
;The Reference solution works only for Lvl 6
Error_against = Exact
;Error_against = Reference

[Ref_Solution]
;Settings for computing a reference solution
;If Compute_Reference_Solution = true, only the reference solution is computed
Compute_Reference_Solution = false
Name = lvl8sinu3_smooth_fine
Ref_Lvl = 9
Ref_Degree = 2
Ref_Timestep = 3000

